//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OutsideServiceDeskFeed.servicedeskfeeds {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceDesk1Soap", Namespace="http://tempuri.org/")]
    public partial class ServiceDesk1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTagInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenRequests2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRequestersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWODetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWorkLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReassignAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseWOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTechInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceDesk1() {
            this.Url = global::OutsideServiceDeskFeed.Properties.Settings.Default.OutsideServiceDeskFeed_servicedeskfeeds_ServiceDesk1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTagInfoCompletedEventHandler GetTagInfoCompleted;
        
        /// <remarks/>
        public event GetOpenRequestsCompletedEventHandler GetOpenRequestsCompleted;
        
        /// <remarks/>
        public event GetOpenRequests2CompletedEventHandler GetOpenRequests2Completed;
        
        /// <remarks/>
        public event GetAllRequestersCompletedEventHandler GetAllRequestersCompleted;
        
        /// <remarks/>
        public event GetWODetailsCompletedEventHandler GetWODetailsCompleted;
        
        /// <remarks/>
        public event AddWorkLogCompletedEventHandler AddWorkLogCompleted;
        
        /// <remarks/>
        public event AddNoteCompletedEventHandler AddNoteCompleted;
        
        /// <remarks/>
        public event ReassignAssetCompletedEventHandler ReassignAssetCompleted;
        
        /// <remarks/>
        public event CloseWOCompletedEventHandler CloseWOCompleted;
        
        /// <remarks/>
        public event GetTechInfoCompletedEventHandler GetTechInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTagInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTagInfo(string tag, string tech) {
            object[] results = this.Invoke("GetTagInfo", new object[] {
                        tag,
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTagInfoAsync(string tag, string tech) {
            this.GetTagInfoAsync(tag, tech, null);
        }
        
        /// <remarks/>
        public void GetTagInfoAsync(string tag, string tech, object userState) {
            if ((this.GetTagInfoOperationCompleted == null)) {
                this.GetTagInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTagInfoOperationCompleted);
            }
            this.InvokeAsync("GetTagInfo", new object[] {
                        tag,
                        tech}, this.GetTagInfoOperationCompleted, userState);
        }
        
        private void OnGetTagInfoOperationCompleted(object arg) {
            if ((this.GetTagInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTagInfoCompleted(this, new GetTagInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpenRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOpenRequests(string tech) {
            object[] results = this.Invoke("GetOpenRequests", new object[] {
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenRequestsAsync(string tech) {
            this.GetOpenRequestsAsync(tech, null);
        }
        
        /// <remarks/>
        public void GetOpenRequestsAsync(string tech, object userState) {
            if ((this.GetOpenRequestsOperationCompleted == null)) {
                this.GetOpenRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenRequestsOperationCompleted);
            }
            this.InvokeAsync("GetOpenRequests", new object[] {
                        tech}, this.GetOpenRequestsOperationCompleted, userState);
        }
        
        private void OnGetOpenRequestsOperationCompleted(object arg) {
            if ((this.GetOpenRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenRequestsCompleted(this, new GetOpenRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpenRequests2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOpenRequests2(string tech) {
            object[] results = this.Invoke("GetOpenRequests2", new object[] {
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenRequests2Async(string tech) {
            this.GetOpenRequests2Async(tech, null);
        }
        
        /// <remarks/>
        public void GetOpenRequests2Async(string tech, object userState) {
            if ((this.GetOpenRequests2OperationCompleted == null)) {
                this.GetOpenRequests2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenRequests2OperationCompleted);
            }
            this.InvokeAsync("GetOpenRequests2", new object[] {
                        tech}, this.GetOpenRequests2OperationCompleted, userState);
        }
        
        private void OnGetOpenRequests2OperationCompleted(object arg) {
            if ((this.GetOpenRequests2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenRequests2Completed(this, new GetOpenRequests2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRequesters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllRequesters(string tech) {
            object[] results = this.Invoke("GetAllRequesters", new object[] {
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRequestersAsync(string tech) {
            this.GetAllRequestersAsync(tech, null);
        }
        
        /// <remarks/>
        public void GetAllRequestersAsync(string tech, object userState) {
            if ((this.GetAllRequestersOperationCompleted == null)) {
                this.GetAllRequestersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRequestersOperationCompleted);
            }
            this.InvokeAsync("GetAllRequesters", new object[] {
                        tech}, this.GetAllRequestersOperationCompleted, userState);
        }
        
        private void OnGetAllRequestersOperationCompleted(object arg) {
            if ((this.GetAllRequestersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRequestersCompleted(this, new GetAllRequestersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWODetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWODetails(string WO, string tech) {
            object[] results = this.Invoke("GetWODetails", new object[] {
                        WO,
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWODetailsAsync(string WO, string tech) {
            this.GetWODetailsAsync(WO, tech, null);
        }
        
        /// <remarks/>
        public void GetWODetailsAsync(string WO, string tech, object userState) {
            if ((this.GetWODetailsOperationCompleted == null)) {
                this.GetWODetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWODetailsOperationCompleted);
            }
            this.InvokeAsync("GetWODetails", new object[] {
                        WO,
                        tech}, this.GetWODetailsOperationCompleted, userState);
        }
        
        private void OnGetWODetailsOperationCompleted(object arg) {
            if ((this.GetWODetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWODetailsCompleted(this, new GetWODetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddWorkLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddWorkLog(string Hours, string Minutes, string Description, string Owner, string Request, string tech) {
            object[] results = this.Invoke("AddWorkLog", new object[] {
                        Hours,
                        Minutes,
                        Description,
                        Owner,
                        Request,
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWorkLogAsync(string Hours, string Minutes, string Description, string Owner, string Request, string tech) {
            this.AddWorkLogAsync(Hours, Minutes, Description, Owner, Request, tech, null);
        }
        
        /// <remarks/>
        public void AddWorkLogAsync(string Hours, string Minutes, string Description, string Owner, string Request, string tech, object userState) {
            if ((this.AddWorkLogOperationCompleted == null)) {
                this.AddWorkLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWorkLogOperationCompleted);
            }
            this.InvokeAsync("AddWorkLog", new object[] {
                        Hours,
                        Minutes,
                        Description,
                        Owner,
                        Request,
                        tech}, this.AddWorkLogOperationCompleted, userState);
        }
        
        private void OnAddWorkLogOperationCompleted(object arg) {
            if ((this.AddWorkLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWorkLogCompleted(this, new AddWorkLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddNote(string isPublic, string noteText, string Request, string tech) {
            object[] results = this.Invoke("AddNote", new object[] {
                        isPublic,
                        noteText,
                        Request,
                        tech});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNoteAsync(string isPublic, string noteText, string Request, string tech) {
            this.AddNoteAsync(isPublic, noteText, Request, tech, null);
        }
        
        /// <remarks/>
        public void AddNoteAsync(string isPublic, string noteText, string Request, string tech, object userState) {
            if ((this.AddNoteOperationCompleted == null)) {
                this.AddNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNoteOperationCompleted);
            }
            this.InvokeAsync("AddNote", new object[] {
                        isPublic,
                        noteText,
                        Request,
                        tech}, this.AddNoteOperationCompleted, userState);
        }
        
        private void OnAddNoteOperationCompleted(object arg) {
            if ((this.AddNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNoteCompleted(this, new AddNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReassignAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReassignAsset(string asset, string tech, string newUser) {
            object[] results = this.Invoke("ReassignAsset", new object[] {
                        asset,
                        tech,
                        newUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReassignAssetAsync(string asset, string tech, string newUser) {
            this.ReassignAssetAsync(asset, tech, newUser, null);
        }
        
        /// <remarks/>
        public void ReassignAssetAsync(string asset, string tech, string newUser, object userState) {
            if ((this.ReassignAssetOperationCompleted == null)) {
                this.ReassignAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReassignAssetOperationCompleted);
            }
            this.InvokeAsync("ReassignAsset", new object[] {
                        asset,
                        tech,
                        newUser}, this.ReassignAssetOperationCompleted, userState);
        }
        
        private void OnReassignAssetOperationCompleted(object arg) {
            if ((this.ReassignAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReassignAssetCompleted(this, new ReassignAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseWO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseWO(string Request, string tech, string AddTime, string CloseComments, string techName) {
            object[] results = this.Invoke("CloseWO", new object[] {
                        Request,
                        tech,
                        AddTime,
                        CloseComments,
                        techName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseWOAsync(string Request, string tech, string AddTime, string CloseComments, string techName) {
            this.CloseWOAsync(Request, tech, AddTime, CloseComments, techName, null);
        }
        
        /// <remarks/>
        public void CloseWOAsync(string Request, string tech, string AddTime, string CloseComments, string techName, object userState) {
            if ((this.CloseWOOperationCompleted == null)) {
                this.CloseWOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseWOOperationCompleted);
            }
            this.InvokeAsync("CloseWO", new object[] {
                        Request,
                        tech,
                        AddTime,
                        CloseComments,
                        techName}, this.CloseWOOperationCompleted, userState);
        }
        
        private void OnCloseWOOperationCompleted(object arg) {
            if ((this.CloseWOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseWOCompleted(this, new CloseWOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTechInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTechInfo(string api) {
            object[] results = this.Invoke("GetTechInfo", new object[] {
                        api});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTechInfoAsync(string api) {
            this.GetTechInfoAsync(api, null);
        }
        
        /// <remarks/>
        public void GetTechInfoAsync(string api, object userState) {
            if ((this.GetTechInfoOperationCompleted == null)) {
                this.GetTechInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTechInfoOperationCompleted);
            }
            this.InvokeAsync("GetTechInfo", new object[] {
                        api}, this.GetTechInfoOperationCompleted, userState);
        }
        
        private void OnGetTechInfoOperationCompleted(object arg) {
            if ((this.GetTechInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTechInfoCompleted(this, new GetTechInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTagInfoCompletedEventHandler(object sender, GetTagInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTagInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTagInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOpenRequestsCompletedEventHandler(object sender, GetOpenRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOpenRequests2CompletedEventHandler(object sender, GetOpenRequests2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenRequests2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenRequests2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllRequestersCompletedEventHandler(object sender, GetAllRequestersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRequestersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRequestersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWODetailsCompletedEventHandler(object sender, GetWODetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWODetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWODetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddWorkLogCompletedEventHandler(object sender, AddWorkLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWorkLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWorkLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddNoteCompletedEventHandler(object sender, AddNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReassignAssetCompletedEventHandler(object sender, ReassignAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReassignAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReassignAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CloseWOCompletedEventHandler(object sender, CloseWOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseWOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseWOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTechInfoCompletedEventHandler(object sender, GetTechInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTechInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTechInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591